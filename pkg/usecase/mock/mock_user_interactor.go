// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/usecase/user_interactor.go

// Package mock_usecase is a generated GoMock package.
package mock_usecase

import (
	entity "22dojo-online/pkg/domain/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockUserInteractorInterface is a mock of UserInteractorInterface interface.
type MockUserInteractorInterface struct {
	ctrl     *gomock.Controller
	recorder *MockUserInteractorInterfaceMockRecorder
}

// MockUserInteractorInterfaceMockRecorder is the mock recorder for MockUserInteractorInterface.
type MockUserInteractorInterfaceMockRecorder struct {
	mock *MockUserInteractorInterface
}

// NewMockUserInteractorInterface creates a new mock instance.
func NewMockUserInteractorInterface(ctrl *gomock.Controller) *MockUserInteractorInterface {
	mock := &MockUserInteractorInterface{ctrl: ctrl}
	mock.recorder = &MockUserInteractorInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockUserInteractorInterface) EXPECT() *MockUserInteractorInterfaceMockRecorder {
	return m.recorder
}

// InsertUser mocks base method.
func (m *MockUserInteractorInterface) InsertUser(user *entity.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "InsertUser", user)
	ret0, _ := ret[0].(error)
	return ret0
}

// InsertUser indicates an expected call of InsertUser.
func (mr *MockUserInteractorInterfaceMockRecorder) InsertUser(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InsertUser", reflect.TypeOf((*MockUserInteractorInterface)(nil).InsertUser), user)
}

// SelectUserByAuthToken mocks base method.
func (m *MockUserInteractorInterface) SelectUserByAuthToken(arg0 string) (*entity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectUserByAuthToken", arg0)
	ret0, _ := ret[0].(*entity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectUserByAuthToken indicates an expected call of SelectUserByAuthToken.
func (mr *MockUserInteractorInterfaceMockRecorder) SelectUserByAuthToken(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectUserByAuthToken", reflect.TypeOf((*MockUserInteractorInterface)(nil).SelectUserByAuthToken), arg0)
}

// SelectUserByPrimaryKey mocks base method.
func (m *MockUserInteractorInterface) SelectUserByPrimaryKey(arg0 string) (*entity.User, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SelectUserByPrimaryKey", arg0)
	ret0, _ := ret[0].(*entity.User)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// SelectUserByPrimaryKey indicates an expected call of SelectUserByPrimaryKey.
func (mr *MockUserInteractorInterfaceMockRecorder) SelectUserByPrimaryKey(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SelectUserByPrimaryKey", reflect.TypeOf((*MockUserInteractorInterface)(nil).SelectUserByPrimaryKey), arg0)
}

// UpdateUserByPrimaryKey mocks base method.
func (m *MockUserInteractorInterface) UpdateUserByPrimaryKey(user *entity.User) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateUserByPrimaryKey", user)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateUserByPrimaryKey indicates an expected call of UpdateUserByPrimaryKey.
func (mr *MockUserInteractorInterfaceMockRecorder) UpdateUserByPrimaryKey(user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateUserByPrimaryKey", reflect.TypeOf((*MockUserInteractorInterface)(nil).UpdateUserByPrimaryKey), user)
}
